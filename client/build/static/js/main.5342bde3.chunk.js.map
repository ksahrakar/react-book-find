{"version":3,"sources":["Components/SearchForm.js","api/API.js","Components/SearchRes.js","pages/Home.js","Components/SavedRes.js","pages/Saved.js","pages/NoMatch.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","props","react_default","a","createElement","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","API","keywords","axios","get","saveBook","oneBook","post","getBooks","deleteBook","delete","SearchRes","state","results","searchBook","then","res","_this","setState","data","items","catch","err","console","log","event","target","Object","defineProperty","preventDefault","addBook","book","title","volumeInfo","authors","description","image","imageLinks","thumbnail","pages","pageCount","info","infoLink","alert","this","_this2","Components_SearchForm","map","result","key","alt","src","href","Component","Home","src_Components_SearchRes","SavedRes","savedBks","error","BkID","_id","Saved","Components_SavedRes","NoMatch","NavBar","App","BrowserRouter","Components_NavBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5342bde3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchForm.css\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"searchLabel\" htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"uk-input uk-width-1-2\"\n          placeholder=\"Search for a Book\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"uk-button uk-button-default\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import axios from \"axios\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\n// api routes\nexport default {\n  search: function(keywords) {\n    return axios.get(BASEURL+keywords+\"&printType=books&maxResults=10\");\n  },\n  saveBook: function(oneBook){\n    return axios.post(\"/api/saved\",oneBook)\n  },\n  getBooks: function(){\n    return axios.get(\"/api/saved\")\n  },\n  deleteBook: function(id){\n    return axios.delete(\"/api/saved/\"+id)\n  }\n};\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport API from \"../api/API\";\nimport \"./SearchRes.css\";\n\nclass SearchRes extends Component {\n  state = {\n    search: \"National Parks\",\n    results: []\n  };\n\n  componentDidMount() {\n    this.searchBook(\"National Parks\");\n  }\n\n  searchBook = (keywords) => {\n    API.search(keywords)\n      .then(res => this.setState({ results: res.data.items}))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n   handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBook(this.state.search);\n    this.setState({search:\"\"})\n  };\n\n  addBook=(book)=>{\n    API\n    .saveBook({\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      pages: book.volumeInfo.pageCount,\n      info: book.volumeInfo.infoLink\n    })\n    .then(alert(\"That book was saved to the list\"))\n    .catch(err=>console.log(err))\n  };\n\n  render() {\n    return (\n      <div className=\"cardPage\">\n        <SearchForm\n          value={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <div className=\"cardContainer\">\n            {this.state.results.map(result => (\n              <div className=\"uk-card uk-card-small uk-card-hover uk-width-5-6 uk-align-center\" id=\"bookcard\" key={result.id}>\n                <div>\n                  <img alt=\"OOPS...no pic available\" src={result.volumeInfo.imageLinks ? result.volumeInfo.imageLinks.thumbnail:\"x\"}/>\n                  <h3 className=\"uk-card-title\">{result.volumeInfo.title}</h3>\n                  <p className=\"uk-article-meta\">Written by {result.volumeInfo.authors?result.volumeInfo.authors:\"Unknown\"} in {result.volumeInfo.pageCount} pages</p>\n                  <p className=\"uk-card-body\">{result.volumeInfo.description}</p>\n                  <a href={result.volumeInfo.infoLink} className=\"uk-button uk-button-default uk-button-small\">Details</a>\n                  <button onClick={()=>this.addBook(result)} className=\"uk-button uk-button-default uk-button-small\">Save</button>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchRes;\n","import React, { Component } from \"react\";\nimport SearchRes from \"../Components/SearchRes\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"SResCont\">\n                <SearchRes />\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport API from \"../api/API\";\n\nclass SavedRes extends Component{\n    state = {\n        results:[]\n    };\n\n    componentDidMount(){\n        this.savedBks()\n    };\n\n    savedBks = () =>{\n        API\n            .getBooks()\n            .then(result=>this.setState({results:result.data}))\n            .catch(error => console.log (error))\n    };\n\n    deleteBook = (BkID)=>{\n        API\n            .deleteBook(BkID)\n            .then(result => this.savedBks())\n            .catch(error =>console.log(error))\n    };\n    \n    render(){\n        return(\n            <div className=\"cardContainer\">\n            {this.state.results.map(result => (\n              <div className=\"uk-card uk-card-small uk-card-hover uk-width-5-6\" id=\"bookcard\" key={result._id}>\n                <div>\n                  <img alt=\"OOPS...no pic available\" src={result.image ? result.image:\"x\"}/>\n                  <h3 className=\"uk-card-title\">{result.title}</h3>\n                  <p className=\"uk-article-meta\">Written by {result.authors?result.authors:\"Unknown\"} in {result.pages} pages</p>\n                  <p className=\"uk-card-body\">{result.description}</p>\n                  <a href={result.info} className=\"uk-button uk-button-default uk-button-small\">Details</a>\n                  <button onClick={()=>this.deleteBook(result._id)} className=\"uk-button uk-button-default uk-button-small\">Delete</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )\n    }\n\n}\n\nexport default SavedRes;","import React, { Component } from \"react\";\nimport SavedRes from \"../Components/SavedRes\";\n\nclass Saved extends Component {\n    render() {\n        return (\n            <div>\n                <SavedRes />\n            </div>\n        )\n    }\n}\n\nexport default Saved;","import React, { Component } from \"react\";\nimport \"./NoMatch.css\";\n\nclass NoMatch extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 id=\"noMatch\">\n                    <p>404 Error...</p>\n                    <p>BLUE SCREEN BABY!</p>\n                    <p>Yeah- can't reach that route...</p>\n                    <p>Simple as that...</p>\n                </h1>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\n\nclass NavBar extends Component {\n    render() {\n      return (\n          <div className=\"NavBar\">\n            <header className=\"App-header\">\n              The Top 10 GoogleBooks Titles for ...\n              <a href=\"/Saved \"id=\"bookbutton\" className=\"uk-button uk-button-default\">Saved Books</a>\n              <a href=\"/\" id=\"searchbutton\" className=\"uk-button uk-button-default\">Home</a>\n            </header>\n          </div>\n        \n      );\n    }\n  }\n  \n  export default NavBar;","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport NavBar from \"./Components/NavBar\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar/>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/Saved\" component={Saved} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}